%PDF-1.4
%ÄÅÇÉ
1 0 obj
<<
  /Type /Catalog  
  /Pages 2 0 R
>>
endobj
2 0 obj
<<
  /Type /Pages  
  /Kids [4 0 R 6 0 R 8 0 R 10 0 R 12 0 R 14 0 R 16 0 R 18 0 R 20 0 R]  
  /Count 9
>>
endobj
3 0 obj
<<
  /Length 862
>>
stream
 1 0 0 1 50 770 cm BT /F0 24 Tf 24 TL (Table of Contents)' /F0 12 Tf 12 TL T* (1)' 0 TL 40 0 Td (Set Package Documentation) Tj -40 0 Td 12 TL (1.1)' 0 TL 40 0 Td (Creating Sets) Tj -40 0 Td 12 TL (1.2)' 0 TL 40 0 Td (Basic Operations) Tj -40 0 Td 12 TL (1.3)' 0 TL 40 0 Td (Set Operations) Tj -40 0 Td 12 TL (1.4)' 0 TL 40 0 Td (Set Relationships) Tj -40 0 Td 12 TL (1.5)' 0 TL 40 0 Td (Iteration and Conversion) Tj -40 0 Td 12 TL (1.6)' 0 TL 40 0 Td (Modifying Sets) Tj -40 0 Td 12 TL (1.7)' 0 TL 40 0 Td (JSON Serialization) Tj -40 0 Td 12 TL (1.8)' 0 TL 40 0 Td (Working with Different Types) Tj -40 0 Td 12 TL (1.9)' 0 TL 40 0 Td (Performance Examples) Tj -40 0 Td 12 TL (1.10)' 0 TL 40 0 Td (Use Cases) Tj -40 0 Td 12 TL (1.11)' 0 TL 40 0 Td (Performance Characteristics) Tj -40 0 Td 12 TL (1.12)' 0 TL 40 0 Td (Best Practices) Tj -40 0 Td 12 TL 36 TL T* ET
endstream
endobj
4 0 obj
<<
  /Type /Page  
  /Contents 3 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
5 0 obj
<<
  /Length 4599
>>
stream
 1 0 0 1 50 770 cm BT /F0 24 Tf (Set Package Documentation) Tj 24 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (This package provides a hash-based set data structure that maintains insertion o) Tj T* (rder. The ) Tj /F0 12 Tf (Set[K]) Tj /F0 12 Tf ( type stores unique elements and provides efficient membership t) Tj T* (esting, insertion, and deletion operations.) Tj T* 12 TL T* /F0 20 Tf (Creating Sets) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (There are several ways to create sets:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "creating sets") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 0 rg (              ) Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( empty_set) Tj 0 0 0 rg ( :) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg ([) Tj 0 0 0 rg (Int) Tj 0 0 0 rg (]) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (empty_set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("0") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (empty_set) Tj 0 0 0 rg ( is_empty) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (                              ) Tj T* 12 TL (9   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set_with_capacity) Tj 0 0 0 rg ( :) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg ([) Tj 0 0 0 rg (Int) Tj 0 0 0 rg (]) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (capacity) Tj 0 0 0 rg (=) Tj 1 0 1 rg (16) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set_with_capacity) Tj 0 0 0 rg ( capacity) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("16") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (               ) Tj T* 12 TL (13  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( from_array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 1) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                          ) Tj T* 12 TL (14  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (from_array) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (                     ) Tj T* 12 TL (17  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( from_fixed) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (of) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (10) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 20) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 30) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (from_fixed) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg () Tj T* 12 TL (20  ) Tj 0 0 0 rg (                  ) Tj T* 12 TL (21  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( from_iter) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_iter) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 4) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 5) Tj 0 0 0 rg (]) Tj 0 0 0 rg ( iter) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (from_iter) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("5") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Basic Operations) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Add, remove, and check membership:) Tj T* 12 TL T* ET
endstream
endobj
6 0 obj
<<
  /Type /Page  
  /Contents 5 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
7 0 obj
<<
  /Length 4861
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "basic operations") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                    ) Tj T* 12 TL (6   ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("apple") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("banana") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("cherry") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                                 ) Tj T* 12 TL (12  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("apple") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (           ) Tj T* 12 TL (14  ) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (                     ) Tj T* 12 TL (16  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("apple") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("orange") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (                    ) Tj T* 12 TL (20  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( remove) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("banana") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("banana") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg () Tj T* 12 TL (24  ) Tj 0 0 0 rg (                                             ) Tj T* 12 TL (25  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( was_added) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( add_and_check) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("date") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (26  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (was_added) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (27  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( was_added_again) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( add_and_check) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("date") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (28  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (was_added_again) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                  ) Tj T* 12 TL (29  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( was_removed) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( remove_and_check) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("cherry") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (30  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (was_removed) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (31  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( was_removed_again) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( remove_and_check) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("cherry") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (32  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (was_removed_again) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                 ) Tj T* 12 TL (33  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Set Operations) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Perform mathematical set operations:) Tj T* 12 TL T* ET
endstream
endobj
8 0 obj
<<
  /Type /Page  
  /Contents 7 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
9 0 obj
<<
  /Length 6171
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "set operations") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 4) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 4) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 5) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 6) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                                        ) Tj T* 12 TL (7   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( union_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( union) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set2) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( union_array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( union_set) Tj 0 0 0 rg ( to_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (union_array) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("6") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                      ) Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                             ) Tj T* 12 TL (12  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( union_alt) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( |) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (union_alt) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("6") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (                                   ) Tj T* 12 TL (16  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( intersection_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( intersection) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set2) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( intersection_array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( intersection_set) Tj 0 0 0 rg ( to_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (intersection_array) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (          ) Tj T* 12 TL (19  ) Tj 0 0 0 rg () Tj T* 12 TL (20  ) Tj 0 0 0 rg (                                    ) Tj T* 12 TL (21  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( intersection_alt) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( &) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (intersection_alt) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg () Tj T* 12 TL (24  ) Tj 0 0 0 rg (                                                  ) Tj T* 12 TL (25  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( difference_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( difference) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set2) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (26  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( difference_array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( difference_set) Tj 0 0 0 rg ( to_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (27  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (difference_array) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (          ) Tj T* 12 TL (28  ) Tj 0 0 0 rg () Tj T* 12 TL (29  ) Tj 0 0 0 rg (                                  ) Tj T* 12 TL (30  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( difference_alt) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( -) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg () Tj T* 12 TL (31  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (difference_alt) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (32  ) Tj 0 0 0 rg () Tj T* 12 TL (33  ) Tj 0 0 0 rg (                                                           ) Tj T* 12 TL (34  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( sym_diff_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( symmetric_difference) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set2) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (35  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( sym_diff_array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( sym_diff_set) Tj 0 0 0 rg ( to_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (36  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (sym_diff_array) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("4") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                ) Tj T* 12 TL (37  ) Tj 0 0 0 rg () Tj T* 12 TL (38  ) Tj 0 0 0 rg (                                            ) Tj T* 12 TL (39  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( sym_diff_alt) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( ^) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg () Tj T* 12 TL (40  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (sym_diff_alt) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("4") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (41  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Set Relationships) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Test relationships between sets:) Tj T* 12 TL T* ET
endstream
endobj
10 0 obj
<<
  /Type /Page  
  /Contents 9 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
11 0 obj
<<
  /Length 4286
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "set relationships") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( small_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( large_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 4) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( disjoint_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (5) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 6) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 7) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (                   ) Tj T* 12 TL (8   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg ( is_subset) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg ( is_subset) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                     ) Tj T* 12 TL (12  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg ( is_superset) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg ( is_superset) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (                                          ) Tj T* 12 TL (16  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg ( is_disjoint) Tj 0 0 0 rg (\() Tj 0 0 0 rg (disjoint_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (small_set) Tj 0 0 0 rg ( is_disjoint) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (               ) Tj T* 12 TL (20  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set1) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 1) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                        ) Tj T* 12 TL (22  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set1) Tj 0 0 0 rg ( ==) Tj 0 0 0 rg ( set2) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Iteration and Conversion) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Iterate over sets and convert to other types:) Tj T* 12 TL T* ET
endstream
endobj
12 0 obj
<<
  /Type /Page  
  /Contents 11 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
13 0 obj
<<
  /Length 6515
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "iteration and conversion") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 0 rg ("first") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "second") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "third") Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                                                 ) Tj T* 12 TL (6   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( to_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (array) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (                          ) Tj T* 12 TL (10  ) Tj 0 0 1 rg (  let) Tj 0 0 1 rg ( mut) Tj 0 0 0 rg ( count) Tj 0 0 0 rg ( =) Tj 1 0 1 rg ( 0) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( each) Tj 0 0 0 rg (\() Tj 0 0 1 rg (fn) Tj 0 0 0 rg (\() Tj 0 0 0 rg (_element) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( {) Tj 0 0 0 rg ( count) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( count) Tj 0 0 0 rg ( +) Tj 1 0 1 rg ( 1) Tj 0 0 0 rg ( }) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (count) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (                       ) Tj T* 12 TL (15  ) Tj 0 0 1 rg (  let) Tj 0 0 1 rg ( mut) Tj 0 0 0 rg ( indices_sum) Tj 0 0 0 rg ( =) Tj 1 0 1 rg ( 0) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( eachi) Tj 0 0 0 rg (\() Tj 0 0 1 rg (fn) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( _element) Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( {) Tj 0 0 0 rg ( indices_sum) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( indices_sum) Tj 0 0 0 rg ( +) Tj 0 0 0 rg ( i) Tj 0 0 0 rg ( }) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (indices_sum) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                 ) Tj T* 12 TL (18  ) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (                 ) Tj T* 12 TL (20  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( elements) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( iter) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg ( collect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (elements) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg (               ) Tj T* 12 TL (24  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( copied_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( copy) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (25  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (copied_set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("3") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (26  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (copied_set) Tj 0 0 0 rg ( ==) Tj 0 0 0 rg ( set) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (27  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Modifying Sets) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Clear and modify existing sets:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "modifying sets") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (10) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 20) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 30) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 40) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 50) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("5") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                       ) Tj T* 12 TL (7   ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( clear) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("0") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( is_empty) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                      ) Tj T* 12 TL (12  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 1 rg (100) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 1 0 1 rg (200) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 1 rg (100) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (JSON Serialization) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Sets can be serialized to JSON as arrays:) Tj T* 12 TL T* ET
endstream
endobj
14 0 obj
<<
  /Type /Page  
  /Contents 13 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
15 0 obj
<<
  /Length 5581
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "json serialization") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( json) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( set) Tj 0 0 0 rg ( to_json) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                                    ) Tj T* 12 TL (7   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (json) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("Array\([Number\(1\), Number\(2\), Number\(3\)]\)") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (               ) Tj T* 12 TL (10  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( string_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 0 rg ("a") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "b") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "c") Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( string_json) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( string_set) Tj 0 0 0 rg ( to_json) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (    string_json) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("Array\([String\(\\"a\\"\), String\(\\"b\\"\), String\(\\"c\\"\)]\)") Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Working with Different Types) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Sets work with any type that implements ) Tj /F0 12 Tf (Hash) Tj /F0 12 Tf ( and ) Tj /F0 12 Tf (Eq) Tj /F0 12 Tf (:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "different types") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 0 rg (                ) Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( int_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 4) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 5) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (int_set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 1 rg (3) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (               ) Tj T* 12 TL (8   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( string_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 0 rg ("hello") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "world") Tj 0 0 0 rg (,) Tj 1 0 0 rg ( "moonbit") Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (string_set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 0 rg ("world") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                                                                   ) Tj T* 12 TL (12  ) Tj 0 0 0 rg (                                          ) Tj T* 12 TL (13  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( char_codes) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (97) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 98) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 99) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                                 ) Tj T* 12 TL (14  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (char_codes) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 1 rg (98) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (            ) Tj T* 12 TL (15  ) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (                                            ) Tj T* 12 TL (17  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( bool_codes) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (from_array) Tj 0 0 0 rg (\() Tj 0 0 0 rg ([) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 0) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 1) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                   ) Tj T* 12 TL (18  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bool_codes) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                ) Tj T* 12 TL (19  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Performance Examples) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Demonstrate efficient operations:) Tj T* 12 TL T* ET
endstream
endobj
16 0 obj
<<
  /Type /Page  
  /Contents 15 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
17 0 obj
<<
  /Length 4738
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "performance examples") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 0 rg (                         ) Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( large_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (capacity) Tj 0 0 0 rg (=) Tj 1 0 1 rg (1000) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                      ) Tj T* 12 TL (7   ) Tj 0 0 1 rg (  for) Tj 0 0 0 rg ( i) Tj 0 0 1 rg ( in) Tj 1 0 1 rg ( 0) Tj 0 0 0 rg (..<) Tj 1 0 1 rg (100) Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (    large_set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  }) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("100") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (                            ) Tj T* 12 TL (13  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 1 rg (50) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (large_set) Tj 0 0 0 rg ( contains) Tj 0 0 0 rg (\() Tj 1 0 1 rg (150) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (                                           ) Tj T* 12 TL (17  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( another_set) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @set) Tj 0 0 0 rg ( Set) Tj 0 0 0 rg (::) Tj 0 0 0 rg (new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 1 rg (  for) Tj 0 0 0 rg ( i) Tj 0 0 1 rg ( in) Tj 1 0 1 rg ( 50) Tj 0 0 0 rg (..<) Tj 1 0 1 rg (150) Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (    another_set) Tj 0 0 0 rg ( add) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (20  ) Tj 0 0 0 rg (  }) Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( intersection) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( large_set) Tj 0 0 0 rg ( intersection) Tj 0 0 0 rg (\() Tj 0 0 0 rg (another_set) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (intersection) Tj 0 0 0 rg ( size) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("50") Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                  ) Tj T* 12 TL (23  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Use Cases) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Sets are particularly useful for:) Tj T* 12 TL T* /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Removing duplicates) Tj /F0 12 Tf (: Convert arrays to sets and back to remove duplicates) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Membership testing) Tj /F0 12 Tf (: Fast O\(1\) average-case lookups) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Mathematical operations) Tj /F0 12 Tf (: Union, intersection, difference operations) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Unique collections) Tj /F0 12 Tf (: Maintaining collections of unique items) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Algorithm implementation) Tj /F0 12 Tf (: Graph algorithms, caching, etc.) Tj T* -10 0 Td 12 TL T* /F0 20 Tf (Performance Characteristics) Tj 20 TL T* 12 TL T* /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Insertion) Tj /F0 12 Tf (: O\(1\) average case, O\(n\) worst case) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Removal) Tj /F0 12 Tf (: O\(1\) average case, O\(n\) worst case) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Lookup) Tj /F0 12 Tf (: O\(1\) average case, O\(n\) worst case) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Space complexity) Tj /F0 12 Tf (: O\(n\) where n is the number of elements) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Iteration order) Tj /F0 12 Tf (: Maintains insertion order \(linked hash set\)) Tj T* -10 0 Td 12 TL T* /F0 20 Tf (Best Practices) Tj 20 TL T* 12 TL T* ET
endstream
endobj
18 0 obj
<<
  /Type /Page  
  /Contents 17 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
19 0 obj
<<
  /Length 1127
>>
stream
 1 0 0 1 50 770 cm BT /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Pre-size when possible) Tj /F0 12 Tf (: Use ) Tj /F0 12 Tf (@set.Set::new\(capacity=n\)) Tj /F0 12 Tf ( if you know the approxim) Tj T* (ate size) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Use appropriate types) Tj /F0 12 Tf (: Ensure your key type has good ) Tj /F0 12 Tf (Hash) Tj /F0 12 Tf ( and ) Tj /F0 12 Tf (Eq) Tj /F0 12 Tf ( implementations) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Prefer set operations) Tj /F0 12 Tf (: Use built-in union, intersection, etc. instead of manual ) Tj T* (loops) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Check return values) Tj /F0 12 Tf (: Use ) Tj /F0 12 Tf (add_and_check) Tj /F0 12 Tf ( and ) Tj /F0 12 Tf (remove_and_check) Tj /F0 12 Tf ( when you need to kno) Tj T* (w if the operation succeeded) Tj T* -10 0 Td /F1 12 Tf 0 TL 10 0 Td (- ) Tj 12 TL /F0 12 Tf /F1 12 Tf (Consider memory usage) Tj /F0 12 Tf (: Sets have overhead compared to arrays for small collectio) Tj T* (ns) Tj T* -10 0 Td 12 TL T* ET
endstream
endobj
20 0 obj
<<
  /Type /Page  
  /Contents 19 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
xref
0 21
0000000000 65535 f 
0000000055 00000 n
0000000121 00000 n
0000000915 00000 n
0000000521 00000 n
0000004653 00000 n
0000000521 00000 n
0000004915 00000 n
0000000521 00000 n
0000006225 00000 n
0000000522 00000 n
0000004341 00000 n
0000000523 00000 n
0000006570 00000 n
0000000523 00000 n
0000005636 00000 n
0000000523 00000 n
0000004793 00000 n
0000000523 00000 n
0000001182 00000 n
0000000523 00000 n
trailer
<<
  /Size 5  
  /Root 1 0 R
>>
startxref
44601
%%EOF
