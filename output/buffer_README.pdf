%PDF-1.4
%ÄÅÇÉ
1 0 obj
<<
  /Type /Catalog  
  /Pages 2 0 R
>>
endobj
2 0 obj
<<
  /Type /Pages  
  /Kids [4 0 R 6 0 R 8 0 R 10 0 R 12 0 R 14 0 R]  
  /Count 6
>>
endobj
3 0 obj
<<
  /Length 599
>>
stream
 1 0 0 1 50 770 cm BT /F0 24 Tf 24 TL (Table of Contents)' /F0 12 Tf 12 TL T* (1)' 0 TL 40 0 Td (buffer) Tj -40 0 Td 12 TL (1.1)' 0 TL 40 0 Td (Basic Usage) Tj -40 0 Td 12 TL (1.2)' 0 TL 40 0 Td (Writing Numbers) Tj -40 0 Td 12 TL (1.3)' 0 TL 40 0 Td (Writing Byte Sequences) Tj -40 0 Td 12 TL (1.4)' 0 TL 40 0 Td (Writing Structured Data) Tj -40 0 Td 12 TL (1.5)' 0 TL 40 0 Td (Size Hints) Tj -40 0 Td 12 TL (1.6)' 0 TL 40 0 Td (Buffer as Logger) Tj -40 0 Td 12 TL (1.7)' 0 TL 40 0 Td (Converting to String/Bytes) Tj -40 0 Td 12 TL (1.8)' 0 TL 40 0 Td (Binary Viewing) Tj -40 0 Td 12 TL 36 TL T* ET
endstream
endobj
4 0 obj
<<
  /Type /Page  
  /Contents 3 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
5 0 obj
<<
  /Length 2924
>>
stream
 1 0 0 1 50 770 cm BT /F0 24 Tf (buffer) Tj 24 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (The buffer package provides a flexible byte buffer implementation for efficient ) Tj T* (binary data handling and serialization.) Tj T* 12 TL T* /F0 20 Tf (Basic Usage) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Create a new buffer and write basic data:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "basic buffer operations") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                     ) Tj T* 12 TL (6   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg (..) Tj 0 0 0 rg (write_byte) Tj 0 0 0 rg (\() Tj 1 0 1 rg (b'H') Tj 0 0 0 rg (\)) Tj 0 0 0 rg (..) Tj 0 0 0 rg (write_byte) Tj 0 0 0 rg (\() Tj 1 0 1 rg (b'i') Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (                   ) Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buf) Tj 0 0 0 rg ( is_empty) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("false") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buf) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("2") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (                          ) Tj T* 12 TL (13  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( bytes) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (    bytes) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 1 0 0 rg (      #|b"\\x48\\x69") Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (20  ) Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 0 rg (                 ) Tj T* 12 TL (22  ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( reset) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buf) Tj 0 0 0 rg ( is_empty) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("true") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (24  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Writing Numbers) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Write numbers in different encodings:) Tj T* 12 TL T* ET
endstream
endobj
6 0 obj
<<
  /Type /Page  
  /Contents 5 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
7 0 obj
<<
  /Length 4260
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "number serialization") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg (    @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                                              ) Tj T* 12 TL (6   ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_int_be) Tj 0 0 0 rg (\() Tj 1 0 1 rg (42) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_int_le) Tj 0 0 0 rg (\() Tj 1 0 1 rg (42) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (     to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 1 0 0 rg (      #|b"\\x00\\x00\\x00\\x2a\\x2a\\x00\\x00\\x00") Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (    @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (                                   ) Tj T* 12 TL (16  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_float_be) Tj 0 0 0 rg (\() Tj 1 0 1 rg (3.14) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_float_le) Tj 0 0 0 rg (\() Tj 1 0 1 rg (3.14) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (18  ) Tj 0 0 0 rg (     to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (19  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (20  ) Tj 1 0 0 rg (      #|b"\\x40\\x48\\xf5\\xc3\\xc3\\xf5\\x48\\x40") Tj 0 0 0 rg () Tj T* 12 TL (21  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (22  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (23  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (24  ) Tj 0 0 0 rg (    @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (25  ) Tj 0 0 0 rg (                            ) Tj T* 12 TL (26  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_int64_be) Tj 0 0 0 rg (\() Tj 1 0 1 rg (0xAABBCCDDEEL) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (27  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_int64_le) Tj 0 0 0 rg (\() Tj 1 0 1 rg (0xAABBCCDDEEL) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (28  ) Tj 0 0 0 rg (     to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (29  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (30  ) Tj 1 0 0 rg (      #|b"\\x00\\x00\\x00\\xaa\\xbb\\xcc\\xdd\\xee\\xee\\xdd\\xcc\\xbb\\xaa\\x00\\x00\\x00") Tj 0 0 0 rg () Tj T* 12 TL (31  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (32  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (33  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (34  ) Tj 0 0 0 rg (    @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (35  ) Tj 0 0 0 rg (                              ) Tj T* 12 TL (36  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_uint_be) Tj 0 0 0 rg (\() Tj 1 0 1 rg (0x2077U) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (37  ) Tj 0 0 0 rg (    ..) Tj 0 0 0 rg (write_uint_le) Tj 0 0 0 rg (\() Tj 1 0 1 rg (0x2077U) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (38  ) Tj 0 0 0 rg (     to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (39  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (40  ) Tj 1 0 0 rg (      #|b"\\x00\\x00\\x20\\x77\\x77\\x20\\x00\\x00") Tj 0 0 0 rg () Tj T* 12 TL (41  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (42  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (43  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Writing Byte Sequences) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Write sequences of bytes:) Tj T* 12 TL T* ET
endstream
endobj
8 0 obj
<<
  /Type /Page  
  /Contents 7 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
9 0 obj
<<
  /Length 3306
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "byte sequence writing") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                     ) Tj T* 12 TL (6   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( bytes) Tj 0 0 0 rg ( =) Tj 1 0 0 rg ( b"Hello") Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bytes) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (                        ) Tj T* 12 TL (10  ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_iter) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bytes) Tj 0 0 0 rg ( iter) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (    contents) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 1 0 0 rg (      #|b"\\x48\\x65\\x6c\\x6c\\x6f\\x48\\x65\\x6c\\x6c\\x6f") Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (17  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg (                         ) Tj T* 12 TL (18  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Writing Structured Data) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Write structured data that implements Show:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "object writing") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (                        ) Tj T* 12 TL (6   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_object) Tj 0 0 0 rg (\() Tj 1 0 1 rg (42) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (                                   ) Tj T* 12 TL (9   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (    contents) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 1 0 0 rg (      #|b"\\x34\\x00\\x32\\x00") Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (16  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Size Hints) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Provide size hints for better performance:) Tj T* 12 TL T* ET
endstream
endobj
10 0 obj
<<
  /Type /Page  
  /Contents 9 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
11 0 obj
<<
  /Length 4499
>>
stream
 1 0 0 1 50 770 cm BT /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "buffer with size hint") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 0 rg (                                             ) Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (size_hint) Tj 0 0 0 rg (=) Tj 1 0 1 rg (1024) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                    ) Tj T* 12 TL (7   ) Tj 0 0 1 rg (  for) Tj 0 0 0 rg ( i) Tj 0 0 1 rg ( in) Tj 1 0 1 rg ( 0) Tj 0 0 0 rg (..<) Tj 1 0 1 rg (100) Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (    buf) Tj 0 0 0 rg ( write_int_le) Tj 0 0 0 rg (\() Tj 0 0 0 rg (i) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  }) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (                               ) Tj T* 12 TL (12  ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buf) Tj 0 0 0 rg ( length) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg (,) Tj 0 0 0 rg ( content) Tj 0 0 0 rg (=) Tj 1 0 0 rg ("400") Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Buffer as Logger) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (The buffer implements the Logger trait for Show:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "buffer as logger") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( array) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( [) Tj 1 0 1 rg (1) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 2) Tj 0 0 0 rg (,) Tj 1 0 1 rg ( 3) Tj 0 0 0 rg (]) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                            ) Tj T* 12 TL (7   ) Tj 0 0 0 rg (  array) Tj 0 0 0 rg ( output) Tj 0 0 0 rg (\() Tj 0 0 0 rg (buf) Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (    contents) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 1 0 0 rg (      #|b"\\x5b\\x00\\x31\\x00\\x2c\\x00\\x20\\x00\\x32\\x00\\x2c\\x00\\x20\\x00\\x33\\x00\\x5d\\x00") Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* /F0 20 Tf (Converting to String/Bytes) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Methods for converting buffer contents:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "buffer conversion") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_byte) Tj 0 0 0 rg (\() Tj 1 0 1 rg (b'a') Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_byte) Tj 0 0 0 rg (\() Tj 1 0 1 rg (b'b') Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_byte) Tj 0 0 0 rg (\() Tj 1 0 1 rg (b'c') Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (7   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( bytes) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (8   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (    bytes) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 1 0 0 rg (      #|b"\\x61\\x62\\x63") Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* ET
endstream
endobj
12 0 obj
<<
  /Type /Page  
  /Contents 11 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
13 0 obj
<<
  /Length 1616
>>
stream
 1 0 0 1 50 770 cm BT /F0 20 Tf (Binary Viewing) Tj 20 TL T* 12 TL T* 12 TL /F0 12 Tf /F0 12 Tf (Support for viewing subsets of bytes:) Tj T* 12 TL T* /F4 12 Tf 12 TL (1   ) Tj 0 0 0 rg (    ) Tj T* 12 TL (2   ) Tj 0 0 1 rg (test) Tj 1 0 0 rg ( "byte view writing") Tj 0 0 0 rg ( {) Tj 0 0 0 rg () Tj T* 12 TL (3   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( @buffer) Tj 0 0 0 rg ( new) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (4   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( bytes) Tj 0 0 0 rg ( =) Tj 1 0 0 rg ( b"Hello World") Tj 0 0 0 rg () Tj T* 12 TL (5   ) Tj 0 0 0 rg () Tj T* 12 TL (6   ) Tj 0 0 0 rg (                              ) Tj T* 12 TL (7   ) Tj 0 0 0 rg (  buf) Tj 0 0 0 rg ( write_bytesview) Tj 0 0 0 rg (\() Tj 0 0 0 rg (bytes) Tj 0 0 0 rg ([) Tj 1 0 1 rg (0) Tj 0 0 0 rg (:) Tj 1 0 1 rg (5) Tj 0 0 0 rg (]) Tj 0 0 0 rg (\)) Tj 0 0 0 rg (                 ) Tj T* 12 TL (8   ) Tj 0 0 1 rg (  let) Tj 0 0 0 rg ( contents) Tj 0 0 0 rg ( =) Tj 0 0 0 rg ( buf) Tj 0 0 0 rg ( to_bytes) Tj 0 0 0 rg (\() Tj 0 0 0 rg (\)) Tj 0 0 0 rg () Tj T* 12 TL (9   ) Tj 0 0 0 rg (  inspect) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (10  ) Tj 0 0 0 rg (    contents) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (11  ) Tj 0 0 0 rg (    content) Tj 0 0 0 rg (=) Tj 0 0 0 rg (\() Tj 0 0 0 rg () Tj T* 12 TL (12  ) Tj 1 0 0 rg (      #|b"\\x48\\x65\\x6c\\x6c\\x6f") Tj 0 0 0 rg () Tj T* 12 TL (13  ) Tj 0 0 0 rg (    \)) Tj 0 0 0 rg (,) Tj 0 0 0 rg () Tj T* 12 TL (14  ) Tj 0 0 0 rg (  \)) Tj 0 0 0 rg () Tj T* 12 TL (15  ) Tj 0 0 0 rg (}) Tj 0 0 0 rg () Tj T* T* 12 TL T* ET
endstream
endobj
14 0 obj
<<
  /Type /Page  
  /Contents 13 0 R  
  /Parent 2 0 R  
  /MediaBox [0 0 595.2765 841.89105]  
  /Resources <<
  /Font <<
  /F0 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Roman
>>  
  /F1 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Bold
>>  
  /F2 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-Italic
>>  
  /F3 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Times-BoldItalic
>>  
  /F4 <<
  /Type /Font  
  /Subtype /Type1  
  /BaseFont /Courier
>>
>>
>>
>>
endobj
xref
0 15
0000000000 65535 f 
0000000055 00000 n
0000000100 00000 n
0000000652 00000 n
0000000521 00000 n
0000002978 00000 n
0000000521 00000 n
0000004314 00000 n
0000000521 00000 n
0000003360 00000 n
0000000522 00000 n
0000004554 00000 n
0000000523 00000 n
0000001671 00000 n
0000000523 00000 n
trailer
<<
  /Size 5  
  /Root 1 0 R
>>
startxref
21190
%%EOF
